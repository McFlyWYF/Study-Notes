//2018-09-1
#include<iostream>
using namespace std;
int main()
{
	int n,k = 0;
	cin>>n;
	int a[n];
	int b[n];	//存储第二天菜价 
	
	
	for(int i = 0;i < n;i++){
		cin>>a[i];
	}
	
	for(int i = 0;i < n - 1;i++){
		if(i == 0){		//处理第一家 
			b[k++] = (a[i] + a[i + 1])  / 2;
		}
		else {
			b[k++] = (a[i - 1] + a[i] + a[i + 1]) / 3;	//第2家到第n-1家 
		}
	}
	
	b[k++] = (a[n - 2] + a[n - 1]) / 2; 	//最后一家 
	
	for(int i = 0;i < k;i++){
		cout<<b[i]<<" ";
	}
	return 0;
}
*/

/*
//2018-09-2
#include<iostream>
using namespace std;
#define MAX 2005

struct DURATION{
	int l,r;
}dura1[MAX],dura2[MAX];		//dura1：小H，dura2：小W
int n;
 
int main()
{
	int time = 0;
	cin>>n;
	for(int i = 0;i < n;i++){
		cin>>dura1[i].l>>dura1[i].r;
	}
	
	for(int i = 0;i < n;i++){
		cin>>dura2[i].l>>dura2[i].r;
	}
	
	int i = 0,j = 0,ans = 0;
	
	while(i < n && j < n){
		//第一种，H在W的左边
		if(dura1[i].r <= dura2[j].l){
			i++;
			continue;
		}
		
		//第二种，相交，H在前，W在后 
		if(dura1[i].l < dura2[j].l && dura1[i].r < dura2[j].r){
			ans += dura1[i].r - dura2[j].l;
			i++;
			continue;
		}
		
		//第三种，W包含H，完全包含 
		if(dura1[i].l >= dura2[j].l && dura1[i].r < dura2[j].r){
			ans += dura1[i].r - dura1[i].l;
			i++;
			continue;
		}
		
		//第四种，相交，W在前，H在后 
		if(dura1[i].l >= dura2[j].l && dura1[i].l <= dura2[j].r && dura1[i].r >= dura2[j].r){
			ans += dura2[j].r - dura1[i].l;
			j++;
			continue;
		}
		
		//第五种，H在W的右边 
		if(dura1[i].l > dura2[j].r){
			j++;
			continue;
		}
		
		//第六种，H包含W
		if(dura1[i].l <= dura2[j].r && dura1[i].r >= dura2[j].r){
			ans += dura2[j].r - dura2[j].l;
			j++;
			continue;
		} 
	}
	
	cout<<ans<<endl;
	return 0;
}*/